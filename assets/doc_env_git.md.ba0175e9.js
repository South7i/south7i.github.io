import{_ as t,c as s,o as l,a}from"./app.86af3dd7.js";const C=JSON.parse('{"title":"Git","description":"","frontmatter":{"title":"Git"},"headers":[{"level":2,"title":"Git配置","slug":"git配置","link":"#git配置","children":[]},{"level":2,"title":"Git基本操作","slug":"git基本操作","link":"#git基本操作","children":[]},{"level":2,"title":"Git分支管理","slug":"git分支管理","link":"#git分支管理","children":[]},{"level":2,"title":"Git拓展","slug":"git拓展","link":"#git拓展","children":[]}],"relativePath":"doc/env/git.md","lastUpdated":1680366695000}'),e={name:"doc/env/git.md"},n=a(`<h2 id="git配置" tabindex="-1">Git配置 <a class="header-anchor" href="#git配置" aria-hidden="true">#</a></h2><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 查看git已有配置信息</span></span>
<span class="line"><span style="color:#A6ACCD;">git config </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">list</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 配置个人用户信息</span></span>
<span class="line"><span style="color:#A6ACCD;">git config </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">global user.name </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">caleb</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">git config </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">global user.email </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">caleb@gmail.com</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><p><strong>配置默认仓库名称</strong></p><blockquote><p>GitHub宣布，自2020年10月1日起，在GitHub平台上创建的所有源代码存储库都将默认命名为main ，而非原本的master 。</p></blockquote><p>这里我们也统一使用main分支作为默认分支名</p><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">git config </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">global init.defaultBranch main</span></span>
<span class="line"></span></code></pre></div><p><strong>配置SSH-Key</strong></p><ul><li>替换为自己邮箱，执行下方命令，即可生成密钥</li></ul><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;"> ssh</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">keygen </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">t rsa </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">C </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">caleb@gmail.com</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 执行命令后需要进行3次或4次确认：</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 1.确认秘钥的保存路径（如果不需要改路径则直接回车）；</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 2.如果上一步置顶的保存路径下已经有秘钥文件，则需要确认是否覆盖（如果之前的秘钥不再需要则直接回车覆盖，如需要则手动拷贝到其他目录后再覆盖）；</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 3.创建密码（如果不需要密码则直接回车）；</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 4.确认密码如果不需要密码则直接回车)；</span></span>
<span class="line"></span></code></pre></div><ul><li><p>操作完成后，路径下会生成2个名为id_rsa和id_rsa.pub的文件</p></li><li><p>文本工具打开生成的id_rsa.pub文件，复制其中的内容</p></li><li><p>打开Github，Settings -&gt; SSH and GPG keys</p></li><li><p>点击New SSH Key,将复制内容粘贴进去保存即可。</p></li></ul><h2 id="git基本操作" tabindex="-1">Git基本操作 <a class="header-anchor" href="#git基本操作" aria-hidden="true">#</a></h2><p><strong>创建仓库命令</strong></p><p>下表列出了 git 创建仓库的命令：</p><table><thead><tr><th style="text-align:left;">命令</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><code>git init</code></td><td style="text-align:left;">初始化仓库</td></tr><tr><td style="text-align:left;"><code>git clone</code></td><td style="text-align:left;">拷贝一份远程仓库，也就是下载一个项目。</td></tr></tbody></table><hr><p><strong>提交与修改</strong></p><p>Git 的工作就是创建和保存你的项目的快照及与之后的快照进行对比。</p><p>下表列出了有关创建与提交你的项目的快照的命令：</p><table><thead><tr><th style="text-align:left;">命令</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><code>git add</code></td><td style="text-align:left;">添加文件到暂存区</td></tr><tr><td style="text-align:left;"><code>git status</code></td><td style="text-align:left;">查看仓库当前的状态，显示有变更的文件。</td></tr><tr><td style="text-align:left;"><code>git diff</code></td><td style="text-align:left;">比较文件的不同，即暂存区和工作区的差异。</td></tr><tr><td style="text-align:left;"><code>git commit</code></td><td style="text-align:left;">提交暂存区到本地仓库。</td></tr><tr><td style="text-align:left;"><code>git reset</code></td><td style="text-align:left;">回退版本。</td></tr><tr><td style="text-align:left;"><code>git rm</code></td><td style="text-align:left;">将文件从暂存区和工作区中删除。</td></tr><tr><td style="text-align:left;"><code>git mv</code></td><td style="text-align:left;">移动或重命名工作区文件。</td></tr></tbody></table><p><strong>提交日志</strong></p><table><thead><tr><th style="text-align:left;">命令</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><code>git log</code></td><td style="text-align:left;">查看历史提交记录</td></tr><tr><td style="text-align:left;"><code>git blame &lt;file&gt;</code></td><td style="text-align:left;">以列表形式查看指定文件的历史修改记录</td></tr></tbody></table><p><strong>远程操作</strong></p><table><thead><tr><th style="text-align:left;">命令</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><code>git remote</code></td><td style="text-align:left;">远程仓库操作</td></tr><tr><td style="text-align:left;"><code>git fetch</code></td><td style="text-align:left;">从远程获取代码库</td></tr><tr><td style="text-align:left;"><code>git pull</code></td><td style="text-align:left;">下载远程代码并合并</td></tr><tr><td style="text-align:left;"><code>git push</code></td><td style="text-align:left;">上传远程代码并合并</td></tr></tbody></table><h2 id="git分支管理" tabindex="-1">Git分支管理 <a class="header-anchor" href="#git分支管理" aria-hidden="true">#</a></h2><p><strong>查看分支</strong></p><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 查看本地所有分支</span></span>
<span class="line"><span style="color:#A6ACCD;">git branch </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 查看远程所有分支</span></span>
<span class="line"><span style="color:#A6ACCD;">git branch </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">r </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 查看本地和远程的所有分支</span></span>
<span class="line"><span style="color:#A6ACCD;">git branch </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">a</span></span>
<span class="line"></span></code></pre></div><p><strong>新建分支</strong></p><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 创建分支</span></span>
<span class="line"><span style="color:#A6ACCD;">git branch 「name」 </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 切换分支</span></span>
<span class="line"><span style="color:#A6ACCD;">git checkout 「name」</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 上面两条也可合并为</span></span>
<span class="line"><span style="color:#A6ACCD;">git checkout </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">b 「name」</span></span>
<span class="line"></span></code></pre></div><p><strong>重命名分支</strong></p><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">git branch </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">m 「name」 「new name」</span></span>
<span class="line"></span></code></pre></div><p><strong>切换分支</strong></p><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">git checkout 「name」</span></span>
<span class="line"></span></code></pre></div><p><strong>删除分支</strong></p><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">git branch </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">d 「name」</span></span>
<span class="line"></span></code></pre></div><p><strong>合并分支</strong></p><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 切换到需要合并到的分支</span></span>
<span class="line"><span style="color:#A6ACCD;">git checkout 「name」</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 将远端branchname分支合并到name分支</span></span>
<span class="line"><span style="color:#A6ACCD;">git merge 「branchname」</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 最重要一点，在操作结束，记得push提交修改</span></span>
<span class="line"><span style="color:#A6ACCD;">git push origin 「name」</span></span>
<span class="line"></span></code></pre></div><h2 id="git拓展" tabindex="-1">Git拓展 <a class="header-anchor" href="#git拓展" aria-hidden="true">#</a></h2>`,37),p=[n];function o(i,c,r,d,g,y){return l(),s("div",null,p)}const f=t(e,[["render",o]]);export{C as __pageData,f as default};
